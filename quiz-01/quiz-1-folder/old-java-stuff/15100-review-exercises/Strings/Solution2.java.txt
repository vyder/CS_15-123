/*
	Solution2.java  character shift within a string

	This program is similar to exercise 1 but instead of generating a reversal it instead does
	shirfting of the characters.

	Examples:
		"Hello"   shifted 1  place   becomes  "oHell"
		"Hello"   shifted 3  places  becomes  "lloHe"
		"FooBar"  shifted -1 places  becomes  "ooBarF"
		"FooBar"  shifted -3 places  becomes  "BarFoo"

	Note that in a fwd shift the end chars wrap to the back
	and a rev shift the front chars wrap to the front.
	No chars are ever lost.

	*Hint: every time you shift chars 1 place, you are actually be creating a
	new String in its place that has the back char moved to the front or front
	char moved to the back. Thus the original string is destroyed
*/

import java.io.*;
public class Solution2
{
	public static void main (String[] args) throws IOException
	{
		BufferedReader kbd = new BufferedReader(new InputStreamReader(System.in));

		String word;
		int placesToShift;

		// prompt for and read the original string from user
		// prompt, read, convert number of places to shirt


		System.out.print("Enter a word: ");
		word = kbd.readLine();

		System.out.print("Enter a small number +/- ");
		placesToShift = Integer.parseInt( kbd.readLine() );

		// write a loop that shifts the characters of the String forward or backward
		// the number of places specified by user

		if (placesToShift > 0 )
			for (int i=0 ; i< placesToShift ; ++i ) // move back char to front
			{
				word= word.charAt( word.length()-1 ) + word;
				word= word.substring( 0, word.length()-1 );
			}
		else if (placesToShift < 0 ) // move front char to back
			for (int i=placesToShift ; i<0 ; ++i )
			{
				word += word.charAt( 0 );
				word= word.substring( 1, word.length() );

			}

		System.out.println("After shift by " + placesToShift + ": " + word);

	} // END main
} //EOF